{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let HttpErrorInterceptor = /*#__PURE__*/(() => {\n  class HttpErrorInterceptor {\n    intercept(req, next) {\n      return next.handle(req).pipe(catchError(error => {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n          // Client-side error\n          errorMessage = `Client-side error: ${error.error.message}`;\n        } else {\n          // Server-side error\n          errorMessage = `Server returned code ${error.status}, message: ${error.error.message || error.message}`;\n        }\n        console.error(errorMessage);\n        return throwError(errorMessage);\n      }));\n    }\n    static ɵfac = function HttpErrorInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpErrorInterceptor)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpErrorInterceptor,\n      factory: HttpErrorInterceptor.ɵfac\n    });\n  }\n  return HttpErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}