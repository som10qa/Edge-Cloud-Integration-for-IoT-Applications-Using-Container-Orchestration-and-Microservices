{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // Needed for ngModel\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction NotificationsComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.sendStatus);\n  }\n}\nfunction NotificationsComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(note_r2);\n  }\n}\nexport let NotificationsComponent = /*#__PURE__*/(() => {\n  class NotificationsComponent {\n    api;\n    notifications = [];\n    notificationMessage = '';\n    sendStatus = '';\n    subscription;\n    constructor(api) {\n      this.api = api;\n    }\n    ngOnInit() {\n      this.subscription = this.api.subscribeToNotifications().subscribe({\n        next: message => {\n          this.notifications.push(message);\n        },\n        error: err => {\n          this.notifications.push('Error receiving notifications');\n          console.error('SSE error:', err);\n        }\n      });\n    }\n    sendNotification() {\n      if (!this.notificationMessage.trim()) {\n        this.sendStatus = 'Please enter a notification message.';\n        return;\n      }\n      this.api.sendNotification(this.notificationMessage).subscribe({\n        next: res => {\n          this.sendStatus = 'Notification sent successfully.';\n          this.notificationMessage = ''; // Clear the input after sending\n        },\n        error: err => {\n          console.error('Error sending notification:', err);\n          this.sendStatus = 'Failed to send notification.';\n        }\n      });\n    }\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    static ɵfac = function NotificationsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationsComponent,\n      selectors: [[\"app-notifications\"]],\n      decls: 12,\n      vars: 3,\n      consts: [[1, \"notification-form\"], [\"type\", \"text\", \"placeholder\", \"Enter notification message\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [4, \"ngIf\"], [1, \"notification-list\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function NotificationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Send Notification\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function NotificationsComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.notificationMessage, $event) || (ctx.notificationMessage = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function NotificationsComponent_Template_button_click_4_listener() {\n            return ctx.sendNotification();\n          });\n          i0.ɵɵtext(5, \"Send\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, NotificationsComponent_p_6_Template, 2, 1, \"p\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"h2\");\n          i0.ɵɵtext(9, \"Received Notifications\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"ul\");\n          i0.ɵɵtemplate(11, NotificationsComponent_li_11_Template, 2, 1, \"li\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.notificationMessage);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.sendStatus);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.notifications);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n\\nul[_ngcontent-%COMP%] {\\n    list-style-type: circle;\\n    padding-left: 20px;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin-bottom: 4px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDO0lBQ0ksdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEJhc2ljIHN0eWxpbmcgZm9yIE5vdGlmaWNhdGlvbnNDb21wb25lbnQgKi9cbnVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIH1cbiAgXG4gIGxpIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return NotificationsComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","sendStatus","note_r2","NotificationsComponent","api","notifications","notificationMessage","subscription","constructor","ngOnInit","subscribeToNotifications","subscribe","next","message","push","error","err","console","sendNotification","trim","res","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","NotificationsComponent_Template","rf","ctx","ɵɵtwoWayListener","NotificationsComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","NotificationsComponent_Template_button_click_4_listener","ɵɵtemplate","NotificationsComponent_p_6_Template","NotificationsComponent_li_11_Template","ɵɵtwoWayProperty","ɵɵproperty","i2","NgForOf","NgIf","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/notifications/notifications.component.ts","/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/notifications/notifications.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // Needed for ngModel\nimport { ApiService } from '../api.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  standalone: true,\n  selector: 'app-notifications',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit, OnDestroy {\n  notifications: string[] = [];\n  notificationMessage: string = '';\n  sendStatus: string = '';\n  private subscription?: Subscription;\n\n  constructor(private api: ApiService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.api.subscribeToNotifications().subscribe({\n      next: (message: string) => {\n        this.notifications.push(message);\n      },\n      error: (err: any) => {\n        this.notifications.push('Error receiving notifications');\n        console.error('SSE error:', err);\n      }\n    });\n  }\n\n  sendNotification(): void {\n    if (!this.notificationMessage.trim()) {\n      this.sendStatus = 'Please enter a notification message.';\n      return;\n    }\n\n    this.api.sendNotification(this.notificationMessage).subscribe({\n      next: (res: any) => {\n        this.sendStatus = 'Notification sent successfully.';\n        this.notificationMessage = '';  // Clear the input after sending\n      },\n      error: (err: any) => {\n        console.error('Error sending notification:', err);\n        this.sendStatus = 'Failed to send notification.';\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}","<div class=\"notification-form\">\n  <h2>Send Notification</h2>\n  <input type=\"text\" [(ngModel)]=\"notificationMessage\" placeholder=\"Enter notification message\" />\n  <button (click)=\"sendNotification()\">Send</button>\n  <p *ngIf=\"sendStatus\">{{ sendStatus }}</p>\n</div>\n\n<div class=\"notification-list\">\n  <h2>Received Notifications</h2>\n  <ul>\n    <li *ngFor=\"let note of notifications\">{{ note }}</li>\n  </ul>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}