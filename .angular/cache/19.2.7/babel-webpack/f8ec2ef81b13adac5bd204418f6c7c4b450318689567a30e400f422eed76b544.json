{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/forms\";\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    apiService;\n    username = '';\n    password = '';\n    message = '';\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    login() {\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      this.apiService.login(credentials).subscribe({\n        next: res => {\n          this.message = res.message;\n        },\n        error: err => {\n          this.message = err.error.message || 'Login failed';\n        }\n      });\n    }\n    register() {\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      this.apiService.register(credentials).subscribe({\n        next: res => {\n          this.message = res.message;\n        },\n        error: err => {\n          this.message = err.error.message || 'Registration failed';\n        }\n      });\n    }\n    static ɵfac = function AuthComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 12,\n      vars: 3,\n      consts: [[1, \"auth-form\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login/Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"br\");\n          i0.ɵɵelementStart(6, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_6_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(7, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_8_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵtext(9, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p\");\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.message);\n        }\n      },\n      dependencies: [CommonModule, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.RequiredValidator, i2.NgModel],\n      styles: [\"div[_ngcontent-%COMP%]{margin-bottom:8px}label[_ngcontent-%COMP%]{display:inline-block;width:80px}\"]\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}