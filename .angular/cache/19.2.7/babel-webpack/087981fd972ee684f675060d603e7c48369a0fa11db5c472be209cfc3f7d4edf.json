{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SensorComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", item_r1.sensor, \" = \", item_r1.value, \"\");\n  }\n}\nexport let SensorComponent = /*#__PURE__*/(() => {\n  class SensorComponent {\n    api;\n    sensor = 'light';\n    value = 0;\n    message = '';\n    data = [];\n    constructor(api) {\n      this.api = api;\n    }\n    ngOnInit() {\n      this.fetchData();\n    }\n    submit() {\n      this.api.postSensorData(this.sensor, this.value).subscribe({\n        next: res => {\n          this.message = res.message || 'Data posted';\n          this.fetchData();\n        },\n        error: err => {\n          this.message = 'Submission failed';\n        }\n      });\n    }\n    fetchData() {\n      this.api.getSensorData().subscribe({\n        next: res => {\n          // if your backend returns { data: [ ... ] } use res.data\n          this.data = res.data ? res.data : Array.isArray(res) ? res : [];\n        },\n        error: err => console.error('Fetch failed:', err)\n      });\n    }\n    static ɵfac = function SensorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SensorComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SensorComponent,\n      selectors: [[\"app-sensor\"]],\n      decls: 13,\n      vars: 4,\n      consts: [[\"placeholder\", \"Sensor type (e.g., light)\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"Value\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function SensorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Sensor Data Input\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\")(3, \"input\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SensorComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.sensor, $event) || (ctx.sensor = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SensorComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function SensorComponent_Template_button_click_5_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵtext(6, \"Send\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"p\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"h3\");\n          i0.ɵɵtext(10, \"Sensor Data Received:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"ul\");\n          i0.ɵɵtemplate(12, SensorComponent_li_12_Template, 2, 2, \"li\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.sensor);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.value);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.message);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.data);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"div[_ngcontent-%COMP%]{margin-bottom:10px}label[_ngcontent-%COMP%]{margin-right:8px}\"]\n    });\n  }\n  return SensorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}