{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AuthComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction AuthComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    apiService;\n    // Properties bound to form fields\n    username = '';\n    password = '';\n    // Message for success or error feedback\n    message = '';\n    // Simple flag to indicate loading state\n    isLoading = false;\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    // Method to register a new user using POST /register endpoint\n    register() {\n      this.isLoading = true;\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      this.apiService.register(credentials).subscribe({\n        next: res => {\n          this.message = res.message;\n          this.isLoading = false;\n        },\n        error: err => {\n          this.message = err.error?.message || 'Registration failed';\n          this.isLoading = false;\n        }\n      });\n    }\n    // Method to log in a user using POST /login endpoint\n    login() {\n      this.isLoading = true;\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      this.apiService.login(credentials).subscribe({\n        next: res => {\n          this.message = res.message;\n          this.isLoading = false;\n        },\n        error: err => {\n          this.message = err.error?.message || 'Login failed';\n          this.isLoading = false;\n        }\n      });\n    }\n    static ɵfac = function AuthComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 15,\n      vars: 6,\n      consts: [[\"type\", \"text\", \"placeholder\", \"Enter username\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", 3, \"click\", \"disabled\"], [4, \"ngIf\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n          i0.ɵɵtext(2, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n          i0.ɵɵtext(6, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\")(9, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_9_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_11_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵtext(12, \"Register\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, AuthComponent_p_13_Template, 2, 1, \"p\", 3)(14, AuthComponent_div_14_Template, 2, 0, \"div\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [CommonModule, i2.NgIf, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n\\ndiv[_ngcontent-%COMP%] {\\n  margin-bottom: 8px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: 80px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCO0FBQzdCO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0eWxlcyBmb3IgQXV0aENvbXBvbmVudCAqL1xuZGl2IHtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDgwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n  return AuthComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","AuthComponent","apiService","username","password","isLoading","constructor","register","credentials","subscribe","next","res","error","err","login","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵtwoWayListener","AuthComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtwoWayBindingSet","AuthComponent_Template_input_ngModelChange_7_listener","ɵɵlistener","AuthComponent_Template_button_click_9_listener","AuthComponent_Template_button_click_11_listener","ɵɵtemplate","AuthComponent_p_13_Template","AuthComponent_div_14_Template","ɵɵtwoWayProperty","ɵɵproperty","i2","NgIf","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/auth/auth.component.ts","/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/auth/auth.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ApiService } from '../api.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-auth',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n  // Properties bound to form fields\n  username = '';\n  password = '';\n  \n  // Message for success or error feedback\n  message = '';\n  \n  // Simple flag to indicate loading state\n  isLoading = false;\n\n  constructor(private apiService: ApiService) {}\n\n  // Method to register a new user using POST /register endpoint\n  register(): void {\n    this.isLoading = true;\n    const credentials = { username: this.username, password: this.password };\n\n    this.apiService.register(credentials).subscribe({\n      next: (res: any) => { \n        this.message = res.message; \n        this.isLoading = false;\n      },\n      error: (err: any) => { \n        this.message = err.error?.message || 'Registration failed'; \n        this.isLoading = false;\n      }\n    });\n  }\n\n  // Method to log in a user using POST /login endpoint\n  login(): void {\n    this.isLoading = true;\n    const credentials = { username: this.username, password: this.password };\n\n    this.apiService.login(credentials).subscribe({\n      next: (res: any) => { \n        this.message = res.message; \n        this.isLoading = false;\n      },\n      error: (err: any) => { \n        this.message = err.error?.message || 'Login failed'; \n        this.isLoading = false;\n      }\n    });\n  }\n}\n","<div>\n  <label>Username:</label>\n  <input type=\"text\" [(ngModel)]=\"username\" placeholder=\"Enter username\" />\n</div>\n<div>\n  <label>Password:</label>\n  <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Enter password\" />\n</div>\n<div>\n  <button type=\"button\" (click)=\"login()\" [disabled]=\"isLoading\">Login</button>\n  <button type=\"button\" (click)=\"register()\" [disabled]=\"isLoading\">Register</button>\n</div>\n<p *ngIf=\"message\">{{ message }}</p>\n<div *ngIf=\"isLoading\">Loading...</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}