{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AuthComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    apiService;\n    // Properties bound to form fields\n    username = '';\n    password = '';\n    // Message for success or error feedback\n    message = '';\n    // Simple flag to indicate loading state\n    isLoading = false;\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    // Method to register a new user using POST /register endpoint\n    register() {\n      this.isLoading = true;\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      this.apiService.register(credentials).subscribe({\n        next: res => {\n          console.log('Registartion response:', res);\n          this.message = res.message;\n          this.isLoading = false;\n        },\n        error: err => {\n          console.error('Login error:', err);\n          this.message = err.error?.message || 'Registration failed';\n          // this.isLoading = false;\n        }\n      });\n    }\n    // Method to log in a user using POST /login endpoint\n    login() {\n      console.log('Login called:', {\n        username: this.username,\n        password: this.password\n      });\n      this.apiService.login({\n        username: this.username,\n        password: this.password\n      }).subscribe({\n        next: res => {\n          console.log('Login response:', res);\n          this.message = res.message;\n        },\n        error: err => {\n          console.error('Login error:', err);\n          this.message = err.error?.message || 'Login failed';\n        }\n      });\n    }\n    static ɵfac = function AuthComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 20,\n      vars: 3,\n      consts: [[1, \"card\", \"my-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [\"for\", \"username\", 1, \"form-label\", \"fw-bold\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter username\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\", 1, \"form-label\", \"fw-bold\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"col-12\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"mt-3\"], [1, \"alert\", \"alert-info\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"User Authentication\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_15_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(16, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_17_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵtext(18, \"Register\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(19, AuthComponent_div_19_Template, 3, 1, \"div\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n        }\n      },\n      dependencies: [CommonModule, i2.NgIf, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"\\n\\ndiv[_ngcontent-%COMP%] {\\n  margin-bottom: 8px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: 80px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCO0FBQzdCO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0eWxlcyBmb3IgQXV0aENvbXBvbmVudCAqL1xuZGl2IHtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDgwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n  return AuthComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","AuthComponent","apiService","username","password","isLoading","constructor","register","credentials","subscribe","next","res","console","log","error","err","login","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵtwoWayListener","AuthComponent_Template_input_ngModelChange_9_listener","$event","ɵɵtwoWayBindingSet","AuthComponent_Template_input_ngModelChange_13_listener","ɵɵlistener","AuthComponent_Template_button_click_15_listener","AuthComponent_Template_button_click_17_listener","ɵɵtemplate","AuthComponent_div_19_Template","ɵɵtwoWayProperty","ɵɵproperty","i2","NgIf","i3","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","styles"],"sources":["/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/auth/auth.component.ts","/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/auth/auth.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ApiService } from '../api.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-auth',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n  // Properties bound to form fields\n  username = '';\n  password = '';\n  \n  // Message for success or error feedback\n  message = '';\n  \n  // Simple flag to indicate loading state\n  isLoading = false;\n\n  constructor(private apiService: ApiService) {}\n\n  // Method to register a new user using POST /register endpoint\n  register(): void {\n    this.isLoading = true;\n    const credentials = { username: this.username, password: this.password };\n\n    this.apiService.register(credentials).subscribe({\n      next: (res: any) => { \n        console.log('Registartion response:', res);\n        this.message = res.message; \n        this.isLoading = false;\n      },\n      error: (err: any) => {\n        console.error('Login error:', err);\n        this.message = err.error?.message || 'Registration failed'; \n        // this.isLoading = false;\n      }\n    });\n  }\n\n  // Method to log in a user using POST /login endpoint\n  login(): void {\n    console.log('Login called:', { username: this.username, password: this.password });\n    this.apiService.login({ username: this.username, password: this.password }).subscribe({\n      next: (res: any) => { \n        console.log('Login response:', res);\n        this.message = res.message;\n      },\n      error: (err: any) => {\n        console.error('Login error:', err);\n        this.message = err.error?.message || 'Login failed';\n      }\n    });\n  }\n}\n","<div class=\"card my-4\">\n  <div class=\"card-header bg-primary text-white\">\n    <h2 class=\"mb-0\">User Authentication</h2>\n  </div>\n  <div class=\"card-body\">\n    <form class=\"row g-3\">\n      <div class=\"col-md-6\">\n        <label for=\"username\" class=\"form-label fw-bold\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"username\"\n          placeholder=\"Enter username\"\n          [(ngModel)]=\"username\"\n          name=\"username\"\n        />\n      </div>\n      <div class=\"col-md-6\">\n        <label for=\"password\" class=\"form-label fw-bold\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          placeholder=\"Enter password\"\n          [(ngModel)]=\"password\"\n          name=\"password\"\n        />\n      </div>\n      <div class=\"col-12 mt-3\">\n        <button class=\"btn btn-primary me-2\" type=\"button\" (click)=\"login()\">Login</button>\n        <button class=\"btn btn-secondary\" type=\"button\" (click)=\"register()\">Register</button>\n      </div>\n    </form>\n\n    <!-- Display messages like 'User registered' or error -->\n    <div class=\"mt-3\" *ngIf=\"message\">\n      <div class=\"alert alert-info\">{{ message }}</div>\n    </div>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}