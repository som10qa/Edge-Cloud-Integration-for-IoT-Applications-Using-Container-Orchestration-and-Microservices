{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SensorComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nfunction SensorComponent_li_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.sensor);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\": \", item_r2.value, \" \");\n  }\n}\nexport let SensorComponent = /*#__PURE__*/(() => {\n  class SensorComponent {\n    apiService;\n    sensor = 'light';\n    value = 0;\n    message = '';\n    data = [];\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    ngOnInit() {\n      this.fetchData();\n    }\n    submit() {\n      this.apiService.postSensorData(this.sensor, this.value).subscribe({\n        next: res => {\n          this.message = res.message || 'Data posted successfully';\n          this.fetchData();\n        },\n        error: err => {\n          this.message = 'Submission failed';\n        }\n      });\n    }\n    fetchData() {\n      this.apiService.getSensorData().subscribe({\n        next: res => {\n          this.data = res.data ? res.data : [];\n        },\n        error: err => {\n          console.error('Fetch failed', err);\n        }\n      });\n    }\n    static ɵfac = function SensorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SensorComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SensorComponent,\n      selectors: [[\"app-sensor\"]],\n      decls: 22,\n      vars: 4,\n      consts: [[1, \"card\", \"my-4\"], [1, \"card-header\", \"bg-success\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"row\", \"gy-2\", \"gx-3\", \"align-items-center\"], [1, \"col-auto\"], [1, \"form-label\", \"fw-bold\", \"me-2\"], [\"type\", \"text\", \"placeholder\", \"e.g., light\", \"name\", \"sensor\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"0\", \"name\", \"value\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"mt-3 text-info\", 4, \"ngIf\"], [1, \"mt-4\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-3\", \"text-info\"], [1, \"list-group-item\"]],\n      template: function SensorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Sensor Data\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Sensor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SensorComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.sensor, $event) || (ctx.sensor = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n          i0.ɵɵtext(12, \"Value\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SensorComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 5)(15, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function SensorComponent_Template_button_click_15_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵtext(16, \" Send \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(17, SensorComponent_div_17_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementStart(18, \"h4\", 11);\n          i0.ɵɵtext(19, \"Stored Sensor Data:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"ul\", 12);\n          i0.ɵɵtemplate(21, SensorComponent_li_21_Template, 4, 2, \"li\", 13);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.sensor);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.value);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.data);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"div[_ngcontent-%COMP%]{margin-bottom:10px}label[_ngcontent-%COMP%]{margin-right:8px}\"]\n    });\n  }\n  return SensorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}