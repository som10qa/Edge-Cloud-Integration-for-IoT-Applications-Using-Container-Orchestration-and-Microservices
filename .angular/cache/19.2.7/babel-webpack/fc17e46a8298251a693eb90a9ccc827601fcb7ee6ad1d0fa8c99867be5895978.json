{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // For two-way binding with ngModel\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"alert-success\": a0,\n  \"alert-danger\": a1\n});\nfunction NotificationsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.sendStatus === \"Notification sent successfully.\", ctx_r1.sendStatus.includes(\"Failed\")));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.sendStatus, \" \");\n  }\n}\nfunction NotificationsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 17);\n    i0.ɵɵtext(2, \"No notifications yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotificationsComponent_ng_template_21_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 20)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(3, 2, note_r3.timestamp, \"shortTime\"), \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", note_r3.message, \" \");\n  }\n}\nfunction NotificationsComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 18);\n    i0.ɵɵtemplate(1, NotificationsComponent_ng_template_21_li_1_Template, 5, 5, \"li\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.notifications);\n  }\n}\nexport let NotificationsComponent = /*#__PURE__*/(() => {\n  class NotificationsComponent {\n    api;\n    notifications = [];\n    notificationMessage = '';\n    sendStatus = '';\n    subscription;\n    constructor(api) {\n      this.api = api;\n    }\n    ngOnInit() {\n      this.subscription = this.api.subscribeToNotifications().subscribe({\n        next: msg => {\n          // Filter out heartbeat messages if needed\n          if (msg.trim().toLowerCase() === 'heartbeat') {\n            return;\n          }\n          // Prepend a timestamp for formatting\n          this.notifications.push({\n            message: msg,\n            timestamp: new Date()\n          });\n        },\n        error: err => {\n          this.notifications.push({\n            message: 'Error receiving notifications',\n            timestamp: new Date()\n          });\n          console.error('SSE error:', err);\n        }\n      });\n    }\n    sendNotification() {\n      if (!this.notificationMessage.trim()) {\n        this.sendStatus = 'Please enter a notification message.';\n        return;\n      }\n      this.api.sendNotification(this.notificationMessage).subscribe({\n        next: res => {\n          this.sendStatus = 'Notification sent successfully.';\n          this.notificationMessage = ''; // Clear the input after sending\n        },\n        error: err => {\n          console.error('Error sending notification:', err);\n          this.sendStatus = 'Failed to send notification.';\n        }\n      });\n    }\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    static ɵfac = function NotificationsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationsComponent,\n      selectors: [[\"app-notifications\"]],\n      decls: 23,\n      vars: 4,\n      consts: [[\"notificationList\", \"\"], [1, \"container\", \"my-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card-body\"], [1, \"mb-3\"], [\"for\", \"notificationInput\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"notificationInput\", \"placeholder\", \"Enter notification message\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [1, \"card\"], [1, \"card-header\", \"bg-info\", \"text-white\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"mt-2\"], [1, \"alert\", 3, \"ngClass\"], [1, \"text-muted\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n      template: function NotificationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"h5\");\n          i0.ɵɵtext(6, \"Send Notification\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function NotificationsComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.notificationMessage, $event) || (ctx.notificationMessage = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function NotificationsComponent_Template_button_click_12_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendNotification());\n          });\n          i0.ɵɵtext(13, \"Send Notification\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, NotificationsComponent_div_14_Template, 3, 5, \"div\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 12)(16, \"div\", 13)(17, \"h5\");\n          i0.ɵɵtext(18, \"Received Notifications\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 6);\n          i0.ɵɵtemplate(20, NotificationsComponent_div_20_Template, 3, 0, \"div\", 14)(21, NotificationsComponent_ng_template_21_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const notificationList_r4 = i0.ɵɵreference(22);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.notificationMessage);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.sendStatus);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.notifications.length === 0)(\"ngIfElse\", notificationList_r4);\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, i2.DatePipe, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".card-header[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{margin:0}.alert[_ngcontent-%COMP%]{padding:.5rem 1rem}.list-group-item[_ngcontent-%COMP%]{font-size:.95rem}\"]\n    });\n  }\n  return NotificationsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}