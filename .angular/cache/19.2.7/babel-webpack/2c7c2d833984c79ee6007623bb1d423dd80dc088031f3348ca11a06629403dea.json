{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // Needed for ngModel\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"alert-success\": a0,\n  \"alert-danger\": a1\n});\nfunction NotificationsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.sendStatus === \"Notification sent successfully.\", ctx_r1.sendStatus.includes(\"Failed\")));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.sendStatus, \" \");\n  }\n}\nfunction NotificationsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 17);\n    i0.ɵɵtext(2, \"No notifications yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotificationsComponent_ng_template_21_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(note_r3);\n  }\n}\nfunction NotificationsComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 18);\n    i0.ɵɵtemplate(1, NotificationsComponent_ng_template_21_li_1_Template, 2, 1, \"li\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.notifications);\n  }\n}\nexport let NotificationsComponent = /*#__PURE__*/(() => {\n  class NotificationsComponent {\n    api;\n    notifications = [];\n    notificationMessage = '';\n    sendStatus = '';\n    subscription;\n    constructor(api) {\n      this.api = api;\n    }\n    ngOnInit() {\n      this.subscription = this.api.subscribeToNotifications().subscribe({\n        next: message => {\n          this.notifications.push(message);\n        },\n        error: err => {\n          this.notifications.push('Error receiving notifications');\n          console.error('SSE error:', err);\n        }\n      });\n    }\n    sendNotification() {\n      if (!this.notificationMessage.trim()) {\n        this.sendStatus = 'Please enter a notification message.';\n        return;\n      }\n      this.api.sendNotification(this.notificationMessage).subscribe({\n        next: res => {\n          this.sendStatus = 'Notification sent successfully.';\n          this.notificationMessage = ''; // Clear the input after sending\n        },\n        error: err => {\n          console.error('Error sending notification:', err);\n          this.sendStatus = 'Failed to send notification.';\n        }\n      });\n    }\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    static ɵfac = function NotificationsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationsComponent,\n      selectors: [[\"app-notifications\"]],\n      decls: 23,\n      vars: 4,\n      consts: [[\"notificationList\", \"\"], [1, \"container\", \"my-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"mb-3\"], [\"for\", \"notificationInput\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"notificationInput\", \"placeholder\", \"Enter notification message\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"mt-2 alert\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"card\"], [1, \"card-header\", \"bg-info\", \"text-white\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"mt-2\", \"alert\", 3, \"ngClass\"], [1, \"text-muted\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n      template: function NotificationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"h5\", 6);\n          i0.ɵɵtext(6, \"Send Notification\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 7)(8, \"div\", 8)(9, \"label\", 9);\n          i0.ɵɵtext(10, \"Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function NotificationsComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.notificationMessage, $event) || (ctx.notificationMessage = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function NotificationsComponent_Template_button_click_12_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendNotification());\n          });\n          i0.ɵɵtext(13, \"Send\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, NotificationsComponent_div_14_Template, 2, 5, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 13)(16, \"div\", 14)(17, \"h5\", 6);\n          i0.ɵɵtext(18, \"Received Notifications\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 7);\n          i0.ɵɵtemplate(20, NotificationsComponent_div_20_Template, 3, 0, \"div\", 15)(21, NotificationsComponent_ng_template_21_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const notificationList_r4 = i0.ɵɵreference(22);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.notificationMessage);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.sendStatus);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.notifications.length === 0)(\"ngIfElse\", notificationList_r4);\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n\\nul[_ngcontent-%COMP%] {\\n    list-style-type: circle;\\n    padding-left: 20px;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin-bottom: 4px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDO0lBQ0ksdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEJhc2ljIHN0eWxpbmcgZm9yIE5vdGlmaWNhdGlvbnNDb21wb25lbnQgKi9cbnVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIH1cbiAgXG4gIGxpIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return NotificationsComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction2","_c0","ctx_r1","sendStatus","includes","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate","note_r3","ɵɵtemplate","NotificationsComponent_ng_template_21_li_1_Template","notifications","NotificationsComponent","api","notificationMessage","subscription","constructor","ngOnInit","subscribeToNotifications","subscribe","next","message","push","error","err","console","sendNotification","trim","res","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","NotificationsComponent_Template","rf","ctx","ɵɵtwoWayListener","NotificationsComponent_Template_input_ngModelChange_11_listener","$event","ɵɵrestoreView","_r1","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","NotificationsComponent_Template_button_click_12_listener","NotificationsComponent_div_14_Template","NotificationsComponent_div_20_Template","NotificationsComponent_ng_template_21_Template","ɵɵtemplateRefExtractor","ɵɵtwoWayProperty","length","notificationList_r4","i2","NgClass","NgForOf","NgIf","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/notifications/notifications.component.ts","/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/notifications/notifications.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // Needed for ngModel\nimport { ApiService } from '../api.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  standalone: true,\n  selector: 'app-notifications',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit, OnDestroy {\n  notifications: string[] = [];\n  notificationMessage: string = '';\n  sendStatus: string = '';\n  private subscription?: Subscription;\n\n  constructor(private api: ApiService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.api.subscribeToNotifications().subscribe({\n      next: (message: string) => {\n        this.notifications.push(message);\n      },\n      error: (err: any) => {\n        this.notifications.push('Error receiving notifications');\n        console.error('SSE error:', err);\n      }\n    });\n  }\n\n  sendNotification(): void {\n    if (!this.notificationMessage.trim()) {\n      this.sendStatus = 'Please enter a notification message.';\n      return;\n    }\n\n    this.api.sendNotification(this.notificationMessage).subscribe({\n      next: (res: any) => {\n        this.sendStatus = 'Notification sent successfully.';\n        this.notificationMessage = '';  // Clear the input after sending\n      },\n      error: (err: any) => {\n        console.error('Error sending notification:', err);\n        this.sendStatus = 'Failed to send notification.';\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}","<div class=\"container my-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n      <!-- Send Notification Section -->\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h5 class=\"mb-0\">Send Notification</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"mb-3\">\n            <label for=\"notificationInput\" class=\"form-label\">Message</label>\n            <input\n              type=\"text\"\n              id=\"notificationInput\"\n              class=\"form-control\"\n              [(ngModel)]=\"notificationMessage\"\n              placeholder=\"Enter notification message\"\n            />\n          </div>\n          <button class=\"btn btn-success\" (click)=\"sendNotification()\">Send</button>\n          <div *ngIf=\"sendStatus\" class=\"mt-2 alert\" [ngClass]=\"{\n              'alert-success': sendStatus === 'Notification sent successfully.',\n              'alert-danger': sendStatus.includes('Failed')\n            }\">\n            {{ sendStatus }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Received Notifications Section -->\n      <div class=\"card\">\n        <div class=\"card-header bg-info text-white\">\n          <h5 class=\"mb-0\">Received Notifications</h5>\n        </div>\n        <div class=\"card-body\">\n          <div *ngIf=\"notifications.length === 0; else notificationList\">\n            <p class=\"text-muted\">No notifications yet.</p>\n          </div>\n          <ng-template #notificationList>\n            <ul class=\"list-group\">\n              <li class=\"list-group-item\" *ngFor=\"let note of notifications\">{{ note }}</li>\n            </ul>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}