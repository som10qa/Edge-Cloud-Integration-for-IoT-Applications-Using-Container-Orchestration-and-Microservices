{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // Needed for ngModel\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nfunction NotificationsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\");\n    i0.ɵɵtext(2, \"No notifications received yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotificationsComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", msg_r1, \" \");\n  }\n}\nfunction NotificationsComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 7);\n    i0.ɵɵtemplate(1, NotificationsComponent_ul_6_li_1_Template, 2, 1, \"li\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.notifications);\n  }\n}\nexport let NotificationsComponent = /*#__PURE__*/(() => {\n  class NotificationsComponent {\n    api;\n    notifications = [];\n    notificationMessage = '';\n    sendStatus = '';\n    subscription;\n    constructor(api) {\n      this.api = api;\n    }\n    ngOnInit() {\n      this.subscription = this.api.subscribeToNotifications().subscribe({\n        next: message => {\n          this.notifications.push(message);\n        },\n        error: err => {\n          this.notifications.push('Error receiving notifications');\n          console.error('SSE error:', err);\n        }\n      });\n    }\n    sendNotification() {\n      if (!this.notificationMessage.trim()) {\n        this.sendStatus = 'Please enter a notification message.';\n        return;\n      }\n      this.api.sendNotification(this.notificationMessage).subscribe({\n        next: res => {\n          this.sendStatus = 'Notification sent successfully.';\n          this.notificationMessage = ''; // Clear the input after sending\n        },\n        error: err => {\n          console.error('Error sending notification:', err);\n          this.sendStatus = 'Failed to send notification.';\n        }\n      });\n    }\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    static ɵfac = function NotificationsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationsComponent,\n      selectors: [[\"app-notifications\"]],\n      decls: 7,\n      vars: 2,\n      consts: [[1, \"card\", \"my-4\"], [1, \"card-header\", \"bg-warning\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"list-group\", 4, \"ngIf\"], [1, \"text-muted\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n      template: function NotificationsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Real-Time Notifications\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, NotificationsComponent_div_5_Template, 3, 0, \"div\", 4)(6, NotificationsComponent_ul_6_Template, 2, 1, \"ul\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.notifications.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.notifications.length > 0);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, FormsModule],\n      styles: [\"\\n\\nul[_ngcontent-%COMP%] {\\n    list-style-type: circle;\\n    padding-left: 20px;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin-bottom: 4px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDO0lBQ0ksdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEJhc2ljIHN0eWxpbmcgZm9yIE5vdGlmaWNhdGlvbnNDb21wb25lbnQgKi9cbnVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIH1cbiAgXG4gIGxpIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return NotificationsComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","msg_r1","ɵɵtemplate","NotificationsComponent_ul_6_li_1_Template","ɵɵproperty","ctx_r1","notifications","NotificationsComponent","api","notificationMessage","sendStatus","subscription","constructor","ngOnInit","subscribeToNotifications","subscribe","next","message","push","error","err","console","sendNotification","trim","res","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","NotificationsComponent_Template","rf","ctx","NotificationsComponent_div_5_Template","NotificationsComponent_ul_6_Template","length","i2","NgForOf","NgIf","styles"],"sources":["/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/notifications/notifications.component.ts","/Users/soumyasubhranandy/FrontEnd_IOT/ui/iot-app/src/app/notifications/notifications.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'; // Needed for ngModel\nimport { ApiService } from '../api.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  standalone: true,\n  selector: 'app-notifications',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit, OnDestroy {\n  notifications: string[] = [];\n  notificationMessage: string = '';\n  sendStatus: string = '';\n  private subscription?: Subscription;\n\n  constructor(private api: ApiService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.api.subscribeToNotifications().subscribe({\n      next: (message: string) => {\n        this.notifications.push(message);\n      },\n      error: (err: any) => {\n        this.notifications.push('Error receiving notifications');\n        console.error('SSE error:', err);\n      }\n    });\n  }\n\n  sendNotification(): void {\n    if (!this.notificationMessage.trim()) {\n      this.sendStatus = 'Please enter a notification message.';\n      return;\n    }\n\n    this.api.sendNotification(this.notificationMessage).subscribe({\n      next: (res: any) => {\n        this.sendStatus = 'Notification sent successfully.';\n        this.notificationMessage = '';  // Clear the input after sending\n      },\n      error: (err: any) => {\n        console.error('Error sending notification:', err);\n        this.sendStatus = 'Failed to send notification.';\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}","<div class=\"card my-4\">\n  <div class=\"card-header bg-warning\">\n    <h2 class=\"mb-0\">Real-Time Notifications</h2>\n  </div>\n  <div class=\"card-body\">\n    <div *ngIf=\"notifications.length === 0\" class=\"text-muted\">\n      <p>No notifications received yet.</p>\n    </div>\n    <ul class=\"list-group\" *ngIf=\"notifications.length > 0\">\n      <li class=\"list-group-item\" *ngFor=\"let msg of notifications\">\n        {{ msg }}\n      </li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}