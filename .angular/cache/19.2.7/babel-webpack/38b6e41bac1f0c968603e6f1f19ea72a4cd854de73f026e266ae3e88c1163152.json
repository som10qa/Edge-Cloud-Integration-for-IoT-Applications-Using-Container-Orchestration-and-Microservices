{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AuthComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    apiService;\n    // Properties bound to form fields\n    username = '';\n    password = '';\n    // Message for success or error feedback\n    message = '';\n    // Simple flag to indicate loading state\n    isLoading = false;\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    // Method to register a new user using POST /register endpoint\n    register() {\n      this.isLoading = true;\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      this.apiService.register(credentials).subscribe({\n        next: res => {\n          console.log('Registartion response:', res);\n          this.message = res.message;\n          this.isLoading = false;\n        },\n        error: err => {\n          console.error('Login error:', err);\n          this.message = err.error?.message || 'Registration failed';\n          // this.isLoading = false;\n        }\n      });\n    }\n    // Method to log in a user using POST /login endpoint\n    login() {\n      console.log('Login called:', {\n        username: this.username,\n        password: this.password\n      });\n      this.apiService.login({\n        username: this.username,\n        password: this.password\n      }).subscribe({\n        next: res => {\n          console.log('Login response:', res);\n          this.message = res.message;\n        },\n        error: err => {\n          console.error('Login error:', err);\n          this.message = err.error?.message || 'Login failed';\n        }\n      });\n    }\n    static ɵfac = function AuthComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 20,\n      vars: 3,\n      consts: [[1, \"card\", \"my-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"row\", \"g-3\"], [1, \"col-md-6\"], [\"for\", \"username\", 1, \"form-label\", \"fw-bold\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter username\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\", 1, \"form-label\", \"fw-bold\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"col-12\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"mt-3\"], [1, \"alert\", \"alert-info\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"User Authentication\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_15_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(16, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_17_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵtext(18, \"Register\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(19, AuthComponent_div_19_Template, 3, 1, \"div\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n        }\n      },\n      dependencies: [CommonModule, i2.NgIf, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"div[_ngcontent-%COMP%]{margin-bottom:8px}label[_ngcontent-%COMP%]{display:inline-block;width:80px}\"]\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}